name: release

on:
  push:
    branches: [main]
    tags: ['v*']

permissions:
  contents: write
  packages: write
  id-token: write # needed for signing the images with GitHub OIDC Token **not production ready**

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE: ghcr.io/${{ github.repository }}
  DOCKER_CLI_EXPERIMENTAL: "enabled"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v2

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20.x"
          cache: false

      - name: Get Go environment
        id: go-env
        run: |
          echo "cache=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "modcache=$(go env GOMODCACHE)" >> $GITHUB_ENV

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.cache }}
            ${{ env.modcache }}
          key: release-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            release-${{ runner.os }}-go-

      - uses: actions/cache@v3
        with:
          path: |
            ./dist/*.deb
            ./dist/*.rpm
            ./dist/*.apk
          key: ${{ github.ref }}
      - uses: sigstore/cosign-installer@v3.0.1
      - uses: anchore/sbom-action/download-syft@v0.13.3

      - name: ghcr-login
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: goreleaser-install
        uses: goreleaser/goreleaser-action@v4
        with:
          install-only: true

      - name: goreleaser-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: task goreleaser
